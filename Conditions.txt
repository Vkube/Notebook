======================================================================================================================
Как не трудно догадаться, у нас должно быть несколько основных методов, которые будут позволять нам взаимодействовать 
с нашей записной книжкой. По сути это базовые CRUD (Create, Read, Update, Delete) операции над нашим основным 
объектом (Note), а также базовое отображение всех элементов.
======================================================================================================================


Для начала давайте создадим все 5 методов с базовой логикой их работы. Все они будут приватными, т.к. 
мы не планируем их повторного использования в других классах, и они влияют только на те действия, что предоставляет 
наше запущенное приложение. 
Внутри класса Notebook создайте 5 методов:
	1)	CreateNote(), который: 
		1.1) Создаёт экземпляр класса Note и помещает его в общее хранилище приложения. Все поля созданного экземпляра 
			 должны иметь значения по умолчанию, кроме идентификатора, который должен быть уникальным и соответствовать 
			 порядковому номеру добавления экземпляра в общее хранилище, начиная с 0.
		1.2) Это временная реализация, мы к ней ещё вернёмся.
	2)	ReadNote(), который:
		2.1) Выводит в консоль сообщение "Введите Id записи: " без перехода на новую строку.
		2.2) Считывает из консоли идентификатор записи и выводит в консоль её строковое представление.
		2.3) Если считанный идентификатор не найден, то метод должен вывести в консоль строку "Данной записи не найдено!".
		2.4) Если считанный идентификатор не является числом, то метод должен вывести в консоль строку 
			 "Введен некорректный идентификатор!".
	3)	UpdateNote(), который:
		3.1) Ничего не принимает, ничего не возвращает и ничего не делает =))
		3.2) Это временная реализация, мы к ней ещё вернёмся.
	4)	DeleteNote(), который:
		4.1) Выводит в консоль сообщение "Введите Id записи для удаления: " без перехода на новую строку.
		4.2) Считывает из консоли идентификатор удаляемой записи и удаляет из общего хранилища запись с указанным 
			 идентификатором и выводит в консоль строку "Запись ХХХ удалена!", где ХХХ – полученный идентификатор записи.
		4.3) Если считанный идентификатор не найден, то метод должен выводить в консоль строку "Данной записи не найдено!".
		4.4) Если считанный идентификатор не является числом, то метод должен выводить в консоль строку
			 "Введен некорректный идентификатор!".
	5)	ShowAllNotes(), который выводит в консоль строковое представление всех записей, находящихся в
		хранилище (каждое с новой строки).

Не забудьте, что для нормального функционального хранилища записей, его необходимо чтобы оно не ссылалось на null, 
поэтому сделайте так, чтобы оно содержало ссылку на корректный экземпляр класса при создании экземпляра класса Notebook.